<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitleTextBlock.Text" xml:space="preserve">
    <value>Romaji Converter</value>
  </data>
  <data name="AutoVariantCheckBox.Content" xml:space="preserve">
    <value>Consider Variant</value>
  </data>
  <data name="BackButton.Label" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BorderVisibilityComboBox.Header" xml:space="preserve">
    <value>Border Visibility</value>
  </data>
  <data name="BorderVisibility_Hidden" xml:space="preserve">
    <value>Hidden</value>
  </data>
  <data name="BorderVisibility_Highlight" xml:space="preserve">
    <value>Visible when there are multiple pronunciations</value>
  </data>
  <data name="BorderVisibility_Visible" xml:space="preserve">
    <value>Visible</value>
  </data>
  <data name="CHCheckBox.Header" xml:space="preserve">
    <value>Chinese</value>
  </data>
  <data name="CHCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="CheckUpdate" xml:space="preserve">
    <value>Check Update</value>
  </data>
  <data name="CheckUpdate-Error" xml:space="preserve">
    <value>An error occurred while checking for updates, please confirm whether your network is normal, or contact the developer</value>
  </data>
  <data name="CheckUpdate-New" xml:space="preserve">
    <value>New version detected, do you want to download it?</value>
  </data>
  <data name="CheckUpdate-None" xml:space="preserve">
    <value>The current application is already the latest version</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ConvertButton.Content" xml:space="preserve">
    <value>Convert</value>
  </data>
  <data name="ConvertPictureButton.Label" xml:space="preserve">
    <value>Export Image</value>
  </data>
  <data name="ConvertTextButton.Content" xml:space="preserve">
    <value>Generate Text</value>
  </data>
  <data name="CopyButton.Content" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="DetailModeButton.Label" xml:space="preserve">
    <value>Detail Mode</value>
  </data>
  <data name="DisplayOptionExpander.Header" xml:space="preserve">
    <value>Display Option</value>
  </data>
  <data name="EditHiraganaCheckBox.Header" xml:space="preserve">
    <value>Hiragana</value>
  </data>
  <data name="EditHiraganaCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="EditRomajiCheckBox.Header" xml:space="preserve">
    <value>Romaji</value>
  </data>
  <data name="EditRomajiCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="Exception" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="GetLyricsError" xml:space="preserve">
    <value>Get Lyrics Error</value>
  </data>
  <data name="HiraganaCheckBox.Header" xml:space="preserve">
    <value>Hiragana</value>
  </data>
  <data name="HiraganaCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="ImageOptionBackgroundColorSetting.Header" xml:space="preserve">
    <value>Background Color</value>
  </data>
  <data name="ImageOptionFontColorSetting.Header" xml:space="preserve">
    <value>Font Color</value>
  </data>
  <data name="ImageOptionFontSetting.Header" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="ImageOptionFontSizeSetting.Header" xml:space="preserve">
    <value>Font Size</value>
  </data>
  <data name="ImageOptionIsOpenExplorerAfterSaveImageSetting.Header" xml:space="preserve">
    <value>Open Explorer After Saved Image</value>
  </data>
  <data name="ImageOptionLineMarginSetting.Header" xml:space="preserve">
    <value>Line Margin</value>
  </data>
  <data name="ImageOptionLinePaddingSetting.Header" xml:space="preserve">
    <value>Line Padding</value>
  </data>
  <data name="ImageOptionPagePaddingSetting.Header" xml:space="preserve">
    <value>Page Padding</value>
  </data>
  <data name="ImageOptionTextBlock.Text" xml:space="preserve">
    <value>Image Option</value>
  </data>
  <data name="ImageOptionTextMarginSetting.Header" xml:space="preserve">
    <value>Text Margin</value>
  </data>
  <data name="ImageOptionWordMarginSetting.Header" xml:space="preserve">
    <value>Word Margin</value>
  </data>
  <data name="ImportCloudMusicButton.Label" xml:space="preserve">
    <value>Get CloudMusic Lyrics</value>
  </data>
  <data name="ImportUrlButton.Label" xml:space="preserve">
    <value>Import Lyics From Url</value>
  </data>
  <data name="ImportUrlContentDialog.CloseButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ImportUrlContentDialog.PrimaryButtonText" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ImportUrlContentDialog.Title" xml:space="preserve">
    <value>Import Lyics From Url</value>
  </data>
  <data name="ImportUrlContentDialogTextBlock1.Text" xml:space="preserve">
    <value>At present, NetEase Cloud, QQ Music, and KuGou are supported</value>
  </data>
  <data name="ImportUrlContentDialogTextBlock2.Text" xml:space="preserve">
    <value>Song sharing url:</value>
  </data>
  <data name="InvalidUrl" xml:space="preserve">
    <value>Invalid Url</value>
  </data>
  <data name="IsOnlyShowKanjiCheckBox.Header" xml:space="preserve">
    <value>Only Kanji Hiragana</value>
  </data>
  <data name="IsOnlyShowKanjiCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="JPCheckBox.Header" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="JPCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="KanjiHiraganaCheckBox.Header" xml:space="preserve">
    <value>Kanji Hiragana</value>
  </data>
  <data name="KanjiHiraganaCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="LyricsOptionIsUseOldLrcParser.Header" xml:space="preserve">
    <value>Use Old Lrc Parser</value>
  </data>
  <data name="LyricsOptionTextBlock.Text" xml:space="preserve">
    <value>Lyrics Option</value>
  </data>
  <data name="NewLineCheckBox.Header" xml:space="preserve">
    <value>NewLine Per Line</value>
  </data>
  <data name="NewLineCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NotValidLyricsFile" xml:space="preserve">
    <value>File is not a valid lyrics json file</value>
  </data>
  <data name="OtherOptionResetSetting.Header" xml:space="preserve">
    <value>Reset Settings</value>
  </data>
  <data name="OtherOptionResetSettingButton.Content" xml:space="preserve">
    <value>Reset Settings</value>
  </data>
  <data name="OtherOptionTextBlock.Text" xml:space="preserve">
    <value>Others</value>
  </data>
  <data name="ReadButton.Label" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ResetSettingDialogCancel" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ResetSettingDialogConfirm" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="ResetSettingDialogContent" xml:space="preserve">
    <value>Existing settings will not be saved.</value>
  </data>
  <data name="ResetSettingDialogTitle" xml:space="preserve">
    <value>Do you want to revert to the default settings?</value>
  </data>
  <data name="RomajiCheckBox.Header" xml:space="preserve">
    <value>Romaji</value>
  </data>
  <data name="RomajiCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="SaveButton.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingButton.Label" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SpaceCheckBox.Header" xml:space="preserve">
    <value>Split By Space</value>
  </data>
  <data name="SpaceCheckBox.MinWidth" xml:space="preserve">
    <value>120</value>
  </data>
  <data name="TextDisplayOptionExpander.Header" xml:space="preserve">
    <value>Text Display Option</value>
  </data>
  <data name="TextOptionLeftParenthesisSetting.Header" xml:space="preserve">
    <value>Left Parenthesis</value>
  </data>
  <data name="TextOptionRightParenthesisSetting.Header" xml:space="preserve">
    <value>Right Parenthesis</value>
  </data>
  <data name="TextOptionTextBlock.Text" xml:space="preserve">
    <value>Text Option</value>
  </data>
  <data name="UpdateButton.Content" xml:space="preserve">
    <value>Check Update</value>
  </data>
  <data name="VersionSetting.Header" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="VersionSettingExpander.Header" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>